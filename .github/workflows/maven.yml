name: Continuous Deploy
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "main"]
jobs:
  build_webapp_ami:
    runs-on: ubuntu-latest
    environment: AWS_DEPLOYMENT
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-2"

      - name: Initialize Packer
        run: |
          packer init ./packer

      - name: Build Packer
        run: |
          packer build -var "github_token=${{ secrets.SECRET_TOKEN }}" ./packer | tee packer_build.log

      
      - name: Extract MySQL and WebApp AMI IDs
        id: get_ami_id
        run: |
          WEBAPP_AMI_ID=$(grep -o 'AMI: ami-[^ ]*' packer_build.log | head -n 1 | sed 's/AMI: //g' | sed 's/\x1b\[[0-9;]*m//g')  
          MYSQL_AMI_ID=$(grep -o 'AMI: ami-[^ ]*' packer_build.log | tail -n 1 | sed 's/AMI: //g' | sed 's/\x1b\[[0-9;]*m//g') 
          # Check if the AMI IDs are correctly extracted
          if [ -z "$MYSQL_AMI_ID" ]; then
            echo "Error: MySQL AMI ID is empty"
            exit 1
          fi
          if [ -z "$WEBAPP_AMI_ID" ]; then
            echo "Error: WebApp AMI ID is empty"
            exit 1
          fi
          echo "MySQL AMI ID: $MYSQL_AMI_ID"
          echo "WebApp AMI ID: $WEBAPP_AMI_ID"
          echo "MYSQL_AMI_ID=$MYSQL_AMI_ID" >> $GITHUB_ENV
          echo "WEBAPP_AMI_ID=$WEBAPP_AMI_ID" >> $GITHUB_ENV

      - name: Start Terraform workflow
        run: |
          curl -v -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.SECRET_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/sagarikapandey17/cloud-project-terraform-aws-infra-sagarikapandey17/dispatches \
          -d '{
            "event_type": "ami_update",
            "client_payload": {
            "mysql_ami_id": "${{ env.MYSQL_AMI_ID }}",
            "webapp_ami_id": "${{ env.WEBAPP_AMI_ID }}"
          }
          }'
